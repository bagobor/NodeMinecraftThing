----node.js MMOG framework----

Some general notes:
  
  *** All scripts should be run from the root source directory ***
  *LINUX ONLY* (for now anyway)
  
Example first time start up:

  % ./scripts/setup.sh
  % ./scripts/start.sh

How to stop the server:

  % ./scripts/stop.sh

How to do unit tests:

  % ./scripts/run_tests.sh

How to test a browser (without typing in a URL):
  
  % ./scripts/chrome.js
  % ./scripts/

Notes on the directory structure:

  .               - Root directory.  Also server javascript files go here.
  
  common/         - Javascript files that are shared by the server and the client
  
  data/           - Database and game state
    data/db       - MongoDB database goes here
    data/keyfile  - Randomly generated database administrator password
    data/config.txt - Database configuration

  mongo/          - Generated by setup.sh contains local copy of mongodb.

  protocol/       - Protocol buffer declarations (may be removed soon)

  scripts/        - Administration scripts for deployment, testing and execution

  tests/          - Unit test directory
  
  www/            - Client data
    www/img       - Images
    www/shaders   - Shaders


Administration Scripts:

  Main scripts:
  
    setup.sh      - Downloads node, npm, mongodb and other relevant packages.  Creates initial configuraiton and deploys locally.  Run this before executing the server.
    start.sh      - Starts running the server
    stop.sh       - Stops a currently running server
    run_tests.sh  - Runs the unit tests
    chrome.sh     - Tests the game in chrome
    firefox.sh    - Tests the game in firefox

  Internal scripts:
    
    build_proto.sh  - Recompiles all the protocol buffer files
    start_db.sh     - Starts a local instance of the mongodb server.
    start_server.sh - Starts a local instance of the game server

Style Conventions:
  
  * camelCase for class names and methods
  * use_underscores for member variables
  * Spaces instead of tabs
  * 2 space indent level
  
TODO:

  Add opera test script
  Add more unit tests
  Get an actual hosting service :)

Contributors:

  Mikola Lysenko
